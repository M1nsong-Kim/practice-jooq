/*
 * This file is generated by jOOQ.
 */
package com.practice.practice_jooq.generated.tables.pojos;


import com.practice.practice_jooq.generated.enums.ProductCategory;

import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Product implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer price;
    private final String id;
    private final String name;
    private final ProductCategory category;

    public Product(Product value) {
        this.price = value.price;
        this.id = value.id;
        this.name = value.name;
        this.category = value.category;
    }

    public Product(
        Integer price,
        String id,
        String name,
        ProductCategory category
    ) {
        this.price = price;
        this.id = id;
        this.name = name;
        this.category = category;
    }

    /**
     * Getter for <code>jooq.product.price</code>.
     */
    public Integer getPrice() {
        return this.price;
    }

    /**
     * Getter for <code>jooq.product.id</code>.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Getter for <code>jooq.product.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>jooq.product.category</code>.
     */
    public ProductCategory getCategory() {
        return this.category;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Product other = (Product) obj;
        if (this.price == null) {
            if (other.price != null)
                return false;
        }
        else if (!this.price.equals(other.price))
            return false;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.category == null) {
            if (other.category != null)
                return false;
        }
        else if (!this.category.equals(other.category))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.price == null) ? 0 : this.price.hashCode());
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.category == null) ? 0 : this.category.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Product (");

        sb.append(price);
        sb.append(", ").append(id);
        sb.append(", ").append(name);
        sb.append(", ").append(category);

        sb.append(")");
        return sb.toString();
    }
}
