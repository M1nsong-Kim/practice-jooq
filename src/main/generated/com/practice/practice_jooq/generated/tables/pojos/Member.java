/*
 * This file is generated by jOOQ.
 */
package com.practice.practice_jooq.generated.tables.pojos;


import com.practice.practice_jooq.generated.enums.MemberGrade;
import com.practice.practice_jooq.generated.enums.MemberRole;

import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Member implements Serializable {

    private static final long serialVersionUID = 1L;

    private final Integer gender;
    private final LocalDateTime registerDtm;
    private final LocalDateTime updaterDtm;
    private final String id;
    private final String idNumber;
    private final String name;
    private final String password;
    private final MemberGrade grade;
    private final MemberRole role;

    public Member(Member value) {
        this.gender = value.gender;
        this.registerDtm = value.registerDtm;
        this.updaterDtm = value.updaterDtm;
        this.id = value.id;
        this.idNumber = value.idNumber;
        this.name = value.name;
        this.password = value.password;
        this.grade = value.grade;
        this.role = value.role;
    }

    public Member(
        Integer gender,
        LocalDateTime registerDtm,
        LocalDateTime updaterDtm,
        String id,
        String idNumber,
        String name,
        String password,
        MemberGrade grade,
        MemberRole role
    ) {
        this.gender = gender;
        this.registerDtm = registerDtm;
        this.updaterDtm = updaterDtm;
        this.id = id;
        this.idNumber = idNumber;
        this.name = name;
        this.password = password;
        this.grade = grade;
        this.role = role;
    }

    /**
     * Getter for <code>jooq.member.gender</code>.
     */
    public Integer getGender() {
        return this.gender;
    }

    /**
     * Getter for <code>jooq.member.register_dtm</code>.
     */
    public LocalDateTime getRegisterDtm() {
        return this.registerDtm;
    }

    /**
     * Getter for <code>jooq.member.updater_dtm</code>.
     */
    public LocalDateTime getUpdaterDtm() {
        return this.updaterDtm;
    }

    /**
     * Getter for <code>jooq.member.id</code>.
     */
    public String getId() {
        return this.id;
    }

    /**
     * Getter for <code>jooq.member.id_number</code>.
     */
    public String getIdNumber() {
        return this.idNumber;
    }

    /**
     * Getter for <code>jooq.member.name</code>.
     */
    public String getName() {
        return this.name;
    }

    /**
     * Getter for <code>jooq.member.password</code>.
     */
    public String getPassword() {
        return this.password;
    }

    /**
     * Getter for <code>jooq.member.grade</code>.
     */
    public MemberGrade getGrade() {
        return this.grade;
    }

    /**
     * Getter for <code>jooq.member.role</code>.
     */
    public MemberRole getRole() {
        return this.role;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Member other = (Member) obj;
        if (this.gender == null) {
            if (other.gender != null)
                return false;
        }
        else if (!this.gender.equals(other.gender))
            return false;
        if (this.registerDtm == null) {
            if (other.registerDtm != null)
                return false;
        }
        else if (!this.registerDtm.equals(other.registerDtm))
            return false;
        if (this.updaterDtm == null) {
            if (other.updaterDtm != null)
                return false;
        }
        else if (!this.updaterDtm.equals(other.updaterDtm))
            return false;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.idNumber == null) {
            if (other.idNumber != null)
                return false;
        }
        else if (!this.idNumber.equals(other.idNumber))
            return false;
        if (this.name == null) {
            if (other.name != null)
                return false;
        }
        else if (!this.name.equals(other.name))
            return false;
        if (this.password == null) {
            if (other.password != null)
                return false;
        }
        else if (!this.password.equals(other.password))
            return false;
        if (this.grade == null) {
            if (other.grade != null)
                return false;
        }
        else if (!this.grade.equals(other.grade))
            return false;
        if (this.role == null) {
            if (other.role != null)
                return false;
        }
        else if (!this.role.equals(other.role))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.gender == null) ? 0 : this.gender.hashCode());
        result = prime * result + ((this.registerDtm == null) ? 0 : this.registerDtm.hashCode());
        result = prime * result + ((this.updaterDtm == null) ? 0 : this.updaterDtm.hashCode());
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.idNumber == null) ? 0 : this.idNumber.hashCode());
        result = prime * result + ((this.name == null) ? 0 : this.name.hashCode());
        result = prime * result + ((this.password == null) ? 0 : this.password.hashCode());
        result = prime * result + ((this.grade == null) ? 0 : this.grade.hashCode());
        result = prime * result + ((this.role == null) ? 0 : this.role.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Member (");

        sb.append(gender);
        sb.append(", ").append(registerDtm);
        sb.append(", ").append(updaterDtm);
        sb.append(", ").append(id);
        sb.append(", ").append(idNumber);
        sb.append(", ").append(name);
        sb.append(", ").append(password);
        sb.append(", ").append(grade);
        sb.append(", ").append(role);

        sb.append(")");
        return sb.toString();
    }
}
