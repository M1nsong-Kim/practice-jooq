/*
 * This file is generated by jOOQ.
 */
package com.practice.practice_jooq.generated.tables.records;


import com.practice.practice_jooq.generated.enums.MemberGrade;
import com.practice.practice_jooq.generated.enums.MemberRole;
import com.practice.practice_jooq.generated.tables.Member;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MemberRecord extends UpdatableRecordImpl<MemberRecord> implements Record8<LocalDateTime, LocalDateTime, String, String, String, String, MemberGrade, MemberRole> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq.member.register_dtm</code>.
     */
    public MemberRecord setRegisterDtm(LocalDateTime value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jooq.member.register_dtm</code>.
     */
    public LocalDateTime getRegisterDtm() {
        return (LocalDateTime) get(0);
    }

    /**
     * Setter for <code>jooq.member.updater_dtm</code>.
     */
    public MemberRecord setUpdaterDtm(LocalDateTime value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jooq.member.updater_dtm</code>.
     */
    public LocalDateTime getUpdaterDtm() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>jooq.member.id</code>.
     */
    public MemberRecord setId(String value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jooq.member.id</code>.
     */
    public String getId() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jooq.member.id_number</code>.
     */
    public MemberRecord setIdNumber(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jooq.member.id_number</code>.
     */
    public String getIdNumber() {
        return (String) get(3);
    }

    /**
     * Setter for <code>jooq.member.name</code>.
     */
    public MemberRecord setName(String value) {
        set(4, value);
        return this;
    }

    /**
     * Getter for <code>jooq.member.name</code>.
     */
    public String getName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>jooq.member.password</code>.
     */
    public MemberRecord setPassword(String value) {
        set(5, value);
        return this;
    }

    /**
     * Getter for <code>jooq.member.password</code>.
     */
    public String getPassword() {
        return (String) get(5);
    }

    /**
     * Setter for <code>jooq.member.grade</code>.
     */
    public MemberRecord setGrade(MemberGrade value) {
        set(6, value);
        return this;
    }

    /**
     * Getter for <code>jooq.member.grade</code>.
     */
    public MemberGrade getGrade() {
        return (MemberGrade) get(6);
    }

    /**
     * Setter for <code>jooq.member.role</code>.
     */
    public MemberRecord setRole(MemberRole value) {
        set(7, value);
        return this;
    }

    /**
     * Getter for <code>jooq.member.role</code>.
     */
    public MemberRole getRole() {
        return (MemberRole) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<LocalDateTime, LocalDateTime, String, String, String, String, MemberGrade, MemberRole> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<LocalDateTime, LocalDateTime, String, String, String, String, MemberGrade, MemberRole> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<LocalDateTime> field1() {
        return Member.MEMBER.REGISTER_DTM;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Member.MEMBER.UPDATER_DTM;
    }

    @Override
    public Field<String> field3() {
        return Member.MEMBER.ID;
    }

    @Override
    public Field<String> field4() {
        return Member.MEMBER.ID_NUMBER;
    }

    @Override
    public Field<String> field5() {
        return Member.MEMBER.NAME;
    }

    @Override
    public Field<String> field6() {
        return Member.MEMBER.PASSWORD;
    }

    @Override
    public Field<MemberGrade> field7() {
        return Member.MEMBER.GRADE;
    }

    @Override
    public Field<MemberRole> field8() {
        return Member.MEMBER.ROLE;
    }

    @Override
    public LocalDateTime component1() {
        return getRegisterDtm();
    }

    @Override
    public LocalDateTime component2() {
        return getUpdaterDtm();
    }

    @Override
    public String component3() {
        return getId();
    }

    @Override
    public String component4() {
        return getIdNumber();
    }

    @Override
    public String component5() {
        return getName();
    }

    @Override
    public String component6() {
        return getPassword();
    }

    @Override
    public MemberGrade component7() {
        return getGrade();
    }

    @Override
    public MemberRole component8() {
        return getRole();
    }

    @Override
    public LocalDateTime value1() {
        return getRegisterDtm();
    }

    @Override
    public LocalDateTime value2() {
        return getUpdaterDtm();
    }

    @Override
    public String value3() {
        return getId();
    }

    @Override
    public String value4() {
        return getIdNumber();
    }

    @Override
    public String value5() {
        return getName();
    }

    @Override
    public String value6() {
        return getPassword();
    }

    @Override
    public MemberGrade value7() {
        return getGrade();
    }

    @Override
    public MemberRole value8() {
        return getRole();
    }

    @Override
    public MemberRecord value1(LocalDateTime value) {
        setRegisterDtm(value);
        return this;
    }

    @Override
    public MemberRecord value2(LocalDateTime value) {
        setUpdaterDtm(value);
        return this;
    }

    @Override
    public MemberRecord value3(String value) {
        setId(value);
        return this;
    }

    @Override
    public MemberRecord value4(String value) {
        setIdNumber(value);
        return this;
    }

    @Override
    public MemberRecord value5(String value) {
        setName(value);
        return this;
    }

    @Override
    public MemberRecord value6(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public MemberRecord value7(MemberGrade value) {
        setGrade(value);
        return this;
    }

    @Override
    public MemberRecord value8(MemberRole value) {
        setRole(value);
        return this;
    }

    @Override
    public MemberRecord values(LocalDateTime value1, LocalDateTime value2, String value3, String value4, String value5, String value6, MemberGrade value7, MemberRole value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MemberRecord
     */
    public MemberRecord() {
        super(Member.MEMBER);
    }

    /**
     * Create a detached, initialised MemberRecord
     */
    public MemberRecord(LocalDateTime registerDtm, LocalDateTime updaterDtm, String id, String idNumber, String name, String password, MemberGrade grade, MemberRole role) {
        super(Member.MEMBER);

        setRegisterDtm(registerDtm);
        setUpdaterDtm(updaterDtm);
        setId(id);
        setIdNumber(idNumber);
        setName(name);
        setPassword(password);
        setGrade(grade);
        setRole(role);
    }

    /**
     * Create a detached, initialised MemberRecord
     */
    public MemberRecord(com.practice.practice_jooq.generated.tables.pojos.Member value) {
        super(Member.MEMBER);

        if (value != null) {
            setRegisterDtm(value.getRegisterDtm());
            setUpdaterDtm(value.getUpdaterDtm());
            setId(value.getId());
            setIdNumber(value.getIdNumber());
            setName(value.getName());
            setPassword(value.getPassword());
            setGrade(value.getGrade());
            setRole(value.getRole());
        }
    }
}
