/*
 * This file is generated by jOOQ.
 */
package com.practice.practice_jooq.generated.tables.records;


import com.practice.practice_jooq.generated.enums.StatsSalesByCategoryCategory;
import com.practice.practice_jooq.generated.tables.StatsSalesByCategory;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatsSalesByCategoryRecord extends UpdatableRecordImpl<StatsSalesByCategoryRecord> implements Record4<Integer, Integer, Integer, StatsSalesByCategoryCategory> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq.stats_sales_by_category.count</code>.
     */
    public StatsSalesByCategoryRecord setCount(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>jooq.stats_sales_by_category.count</code>.
     */
    public Integer getCount() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>jooq.stats_sales_by_category.id</code>.
     */
    public StatsSalesByCategoryRecord setId(Integer value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>jooq.stats_sales_by_category.id</code>.
     */
    public Integer getId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>jooq.stats_sales_by_category.rate</code>.
     */
    public StatsSalesByCategoryRecord setRate(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>jooq.stats_sales_by_category.rate</code>.
     */
    public Integer getRate() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>jooq.stats_sales_by_category.category</code>.
     */
    public StatsSalesByCategoryRecord setCategory(StatsSalesByCategoryCategory value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>jooq.stats_sales_by_category.category</code>.
     */
    public StatsSalesByCategoryCategory getCategory() {
        return (StatsSalesByCategoryCategory) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, StatsSalesByCategoryCategory> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Integer, StatsSalesByCategoryCategory> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return StatsSalesByCategory.STATS_SALES_BY_CATEGORY.COUNT;
    }

    @Override
    public Field<Integer> field2() {
        return StatsSalesByCategory.STATS_SALES_BY_CATEGORY.ID;
    }

    @Override
    public Field<Integer> field3() {
        return StatsSalesByCategory.STATS_SALES_BY_CATEGORY.RATE;
    }

    @Override
    public Field<StatsSalesByCategoryCategory> field4() {
        return StatsSalesByCategory.STATS_SALES_BY_CATEGORY.CATEGORY;
    }

    @Override
    public Integer component1() {
        return getCount();
    }

    @Override
    public Integer component2() {
        return getId();
    }

    @Override
    public Integer component3() {
        return getRate();
    }

    @Override
    public StatsSalesByCategoryCategory component4() {
        return getCategory();
    }

    @Override
    public Integer value1() {
        return getCount();
    }

    @Override
    public Integer value2() {
        return getId();
    }

    @Override
    public Integer value3() {
        return getRate();
    }

    @Override
    public StatsSalesByCategoryCategory value4() {
        return getCategory();
    }

    @Override
    public StatsSalesByCategoryRecord value1(Integer value) {
        setCount(value);
        return this;
    }

    @Override
    public StatsSalesByCategoryRecord value2(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public StatsSalesByCategoryRecord value3(Integer value) {
        setRate(value);
        return this;
    }

    @Override
    public StatsSalesByCategoryRecord value4(StatsSalesByCategoryCategory value) {
        setCategory(value);
        return this;
    }

    @Override
    public StatsSalesByCategoryRecord values(Integer value1, Integer value2, Integer value3, StatsSalesByCategoryCategory value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StatsSalesByCategoryRecord
     */
    public StatsSalesByCategoryRecord() {
        super(StatsSalesByCategory.STATS_SALES_BY_CATEGORY);
    }

    /**
     * Create a detached, initialised StatsSalesByCategoryRecord
     */
    public StatsSalesByCategoryRecord(Integer count, Integer id, Integer rate, StatsSalesByCategoryCategory category) {
        super(StatsSalesByCategory.STATS_SALES_BY_CATEGORY);

        setCount(count);
        setId(id);
        setRate(rate);
        setCategory(category);
    }

    /**
     * Create a detached, initialised StatsSalesByCategoryRecord
     */
    public StatsSalesByCategoryRecord(com.practice.practice_jooq.generated.tables.pojos.StatsSalesByCategory value) {
        super(StatsSalesByCategory.STATS_SALES_BY_CATEGORY);

        if (value != null) {
            setCount(value.getCount());
            setId(value.getId());
            setRate(value.getRate());
            setCategory(value.getCategory());
        }
    }
}
